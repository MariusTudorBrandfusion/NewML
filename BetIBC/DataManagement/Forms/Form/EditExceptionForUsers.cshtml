@inherits RazorTemplateBase<RazorTemplateModel<Template>>
@using Dynamicweb.Rendering
@using System.Collections.Generic
@using System.Linq
@using Dynamicweb.Core
@using System
@SnippetStart("BootstrapCss")
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
@SnippetEnd("BootstrapCss")
@Include("/Files/Templates/Designs/BetIBC/DataManagement/Forms/Form/Includes/GeneralDataListFormHelpers.cshtml")
@{
   var formStart = GetString("Form.Start");
    var formEnd = GetString("Form.End");
    var formHiddenFileds = GetString("Form.Hidden");
    var lableName = GetString("Form.Fields.Exceptions_Form_For_Admin_Name.Label");
    var lableValue = GetString("Form.Fields.Exceptions_Form_For_Admin_Value.Label");
    var lableIsProcent = GetString("Form.Fields.Exceptions_Form_For_Admin_Is_Procent.Label");
   var deactivateSelect = GetString("Form.Fields.Exceptions_Form_For_Admin_Deactivate.Control");
    var name = GetString("Form.Fields.Exceptions_Form_For_Admin_Name.Systemname");
    var value = GetString("Form.Fields.Exceptions_Form_For_Admin_Value.Systemname");
    var isProcent = GetString("Form.Fields.Exceptions_Form_For_Admin_Is_Procent.Systemname");
    var labelValueForMin = GetString("Form.Fields.Exceptions_Form_For_Admin_Value_for_less_then_min.Label");
    var valueForMin = GetString("Form.Fields.Exceptions_Form_For_Admin_Value_for_less_then_min.Systemname");
    var labelForMinIsProcent = GetString("Form.Fields.Exceptions_Form_For_Admin_Value_for_less_then_min_Is_Procent.Label");
    var valueForMinIsProcent = GetString("Form.Fields.Exceptions_Form_For_Admin_Value_for_less_then_min_Is_Procent.Systemname");
    var labelForNotes = GetString("Form.Fields.Exceptions_Form_For_Admin_Notes.Label");
    var notes = GetString("Form.Fields.Exceptions_Form_For_Admin_Notes.Systemname");
    var userID = GetGlobalValue("Global:Extranet.UserID");
    var userIDName = GetString("Form.Fields.Exceptions_Form_For_Admin_User_Id.Systemname");
    var userIDLabel = "User ID";
    var formSubmit = GetString("Form.Button.Submit");
    var nameValue = GetString("Form.Fields.Exceptions_Form_For_Admin_Name.Value");
    var valueValue = GetString("Form.Fields.Exceptions_Form_For_Admin_Value.Value");
  var isProcentValue = GetString("Form.Fields.Exceptions_Form_For_Admin_Is_Procent.Value");
  var LessThenMinValue = GetString("Form.Fields.Exceptions_Form_For_Admin_Value_for_less_then_min.Value");
  var  LessThenMinIsProcentValue = GetString("Form.Fields.Exceptions_Form_For_Admin_Value_for_less_then_min_Is_Procent.Value");
  var notesValue = GetString("Form.Fields.Exceptions_Form_For_Admin_Notes.Value");
  


}

<div class="container">
    <div class="exception-form-for-users @userID"> 
        @formStart
        @formHiddenFileds
        @simpleInputField("text", lableName, name, name, "required", nameValue)
        <div class="row">
            <div class="col-xs-6">
                @simpleInputField("number",lableValue, value, value, "required", valueValue)
                @sinpleCheckboxField(lableIsProcent, isProcent, isProcent, "True", isProcentValue)
            </div>
            <div class="col-xs-6">
                @simpleInputField("number",labelValueForMin,valueForMin,valueForMin, "required", LessThenMinValue)
                @sinpleCheckboxField(labelForMinIsProcent, valueForMinIsProcent,valueForMinIsProcent, "True", LessThenMinIsProcentValue)
            </div>
        </div>
        @simpleTextAreaField(labelForNotes, notes, notes, "required", notesValue)
        @preBuiltEmlement("Deactivate User", deactivateSelect, deactivateSelect)
        <div class="hidden">
        @simpleInputField("text",userIDLabel,userIDName,userIDName, "required", userID)
        </div>
        
        @formSubmit
        @formEnd
    </div>
</div>

