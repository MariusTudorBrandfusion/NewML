@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>
@using System.Web;
@using System.Collections.Specialized;
@using System.Text.RegularExpressions;
@using System.Net;
@using System;
[

	@{
		int loopCount =  GetLoop("QueryResultItem").Count() - 1;
		var rows = GetLoop("QueryResultItem");
		int loopCounter = 0;
	}

	@foreach (var row in rows) {

	var sortOrder= row.GetInteger("PageSort");
	var PageId = row.GetInteger("PageId");
	var ParentPageId = row.GetInteger("PageParentPageId");
	var areaID = row.GetInteger("PageAreaIdString");
	var oddRaw = row.GetString("Tips_Odds");
	var odd = oddRaw.Contains(",") ? oddRaw.Replace(",","."): oddRaw;
	var stakeRaw = row.GetString("Tips_Stake");
	var stakePrelucrated = stakeRaw.Contains("*") ? stakeRaw.Replace("*","/10"): stakeRaw;
	var stake = stakePrelucrated.Contains("/10") ? stakePrelucrated : stakePrelucrated + "/10";
	var stakeClean = stake.Replace("/10" , "");
	var won = row.GetString("Tips_Prediction_Status") == "cancelled" ? "draw" : row.GetString("Tips_Prediction_Status");
	var tipsterRaw = row.GetString("Tips_Tipster_ID");
    Dynamicweb.Content.Items.Item tipsterName = Dynamicweb.Content.Items.ItemManager.Storage.GetById("Tipster", tipsterRaw);
    var tipsterNameClean = tipsterName != null ? tipsterName["Tipster_Name"] : "NOT FOUND";
	var predictionDateRaw = row.GetDate("Tips_Date_Added");
	var predictionDate = predictionDateRaw.ToString("dd/MM/yyyy");
	var predictionStartGMT = row.GetDate("Tips_Start_GMT");
    var predictionStartGMTToRaw = predictionStartGMT.ToString("dd/MM/yyyy");
	var TipsterNavigationTag =  tipsterNameClean.ToString().Replace(" ", "");
	var TipsterPageId = GetPageIdByNavigationTag(TipsterNavigationTag).ToString();
	var league = row.GetString("Tips_League");
	var gameRaw = row.GetString("Tips_Prediction_Title");
	var game = !string.IsNullOrEmpty(gameRaw) ? gameRaw : "N/A";
	var prediction = row.GetString("Tips_BettingPrediction");
	var bookmakerLogo = row.GetString("Tips_Bookmaker");
	var BookmakerNameRaw = row.GetString("Tips_Bookmaker_Name");
	var bookmakerName = BookmakerNameRaw.Contains("+") ? BookmakerNameRaw.Replace("+", " ") : BookmakerNameRaw;
	var bookmakerUrl = row.GetString("Tips_BookmakerUrl");
	var bookmakerEmail = row.GetString("Tips_Tipster_Email");
	var tipCategory = row.GetString("Tips_Category");
    var tipDescription= row.GetString("Tips_Description");
    var tipDescriptionRaw =  Regex.Replace(tipDescription, "<.*?>", String.Empty);
    var tipDescriptionClean = System.Web.HttpUtility.JavaScriptStringEncode(tipDescription);
	var vipScreenshot = row.GetString("Tips_VIP_IBC_Screenshot");
	var resultScreenshot = row.GetString("Tips_Result_Screenshot");
	var finalScore = row.GetString("Tips_Match_Final_Score") != "" ? row.GetString("Tips_Match_Final_Score") : "N/A" ;
    var predictionNumber = row.GetString("Tips_Prediction");
		if(loopCounter == loopCount){

			<text>
			   {
            
				"sortOrder": "@sortOrder",
                "ParentPageId": "@ParentPageId",
              	"PageId": "@PageId",
             	"odd": "@odd",
              	"stake": "@stake",
              	"stakeClean" : "@stakeClean",
              	"won": "@won",
              	"tipster" : "@tipsterNameClean",
				"predictionDate" : "@predictionDate",
				"startGMT" : "@predictionStartGMT",
                "startGMTRaw" : "@predictionStartGMTToRaw",
				"TipsterPageId" : "@TipsterPageId",
				"league" : "@league",
				"game" : "@game",
				"betOn" : "@prediction",
				"bookmakerName" : "@bookmakerName",
				"bookmakerLogo" : "@bookmakerLogo",
				"bookmakerUrl" : "@bookmakerUrl",
              	"finalScore" : "@finalScore",
                "bookmakerEmail": "@bookmakerEmail",
                "tipCategory": "@tipCategory",
                "vipScreenshot": "@vipScreenshot",
                "resultScreenshot": "@resultScreenshot",
              "tipDescriptionClean": "@tipDescriptionClean",
              "predictionNumber": "@predictionNumber",
              	"areaID": "@areaID"
                }
			</text>
		}else{
              <text>
              {
	             "sortOrder": "@sortOrder",
                "ParentPageId": "@ParentPageId",
              	"PageId": "@PageId",
             	"odd": "@odd",
              	"stake": "@stake",
              	"stakeClean" : "@stakeClean",
              	"won": "@won",
              	"tipster" : "@tipsterNameClean",
				"predictionDate" : "@predictionDate",
				"startGMT" : "@predictionStartGMT",
                "startGMTRaw" : "@predictionStartGMTToRaw",
				"TipsterPageId" : "@TipsterPageId",
				"league" : "@league",
				"game" : "@game",
				"betOn" : "@prediction",
				"bookmakerName" : "@bookmakerName",
				"bookmakerLogo" : "@bookmakerLogo",
				"bookmakerUrl" : "@bookmakerUrl",
              	"finalScore" : "@finalScore",
                "bookmakerEmail": "@bookmakerEmail",
                "tipCategory": "@tipCategory",
                "vipScreenshot": "@vipScreenshot",
                "resultScreenshot": "@resultScreenshot",
              "tipDescriptionClean": "@tipDescriptionClean",
                     "predictionNumber": "@predictionNumber",
              	"areaID": "@areaID"
              	},
              </text>
            }

loopCounter ++;

}

]